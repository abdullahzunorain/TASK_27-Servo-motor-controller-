C51 COMPILER V9.60.7.0   KEYPAD                                                            09/25/2024 12:06:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Objects\KEYPAD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE KEYPAD.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\KEYPAD.lst) TABS(2) OBJECT(.\Objects\KEYPAD.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "KEYPAD.h"
   4          
   5          
   6          
   7          
   8          
   9          
  10          
  11          sbit c4=P1^0;
  12          sbit c3=P1^1;
  13          sbit c2=P1^2;
  14          sbit c1=P1^3;
  15          sbit r4=P1^4;
  16          sbit r3=P1^5;
  17          sbit r2=P1^6;
  18          sbit r1=P1^7;
  19          char key  = '\0' ;
  20          char keypad ()
  21          {
  22   1        c1=c2=c3=c4=1;
  23   1        r1=0;r2=1;r3=1;r4=1;
  24   1        if(c1==0)
  25   1        {
  26   2          while(c1==0);
  27   2            lcd_char('7');
  28   2            key='7';
  29   2        }
  30   1        else if(c2==0)
  31   1        {
  32   2          while(c2==0);
  33   2          lcd_char('8');
  34   2          key='8';
  35   2        }
  36   1        else if(c3==0)
  37   1        {
  38   2          while(c3==0);
  39   2          lcd_char('9');
  40   2          key='9';
  41   2        }
  42   1        else if(c4==0)
  43   1        {
  44   2          while(c4==0);
  45   2          lcd_char('/');
  46   2          key='/';
  47   2        }
  48   1        
  49   1        
  50   1        r1=1;r2=0;r3=1;r4=1;
  51   1        if(c1==0)
  52   1        {
  53   2          while(c1==0);
  54   2            lcd_char('4');
C51 COMPILER V9.60.7.0   KEYPAD                                                            09/25/2024 12:06:34 PAGE 2   

  55   2          key='4';
  56   2        }
  57   1        else if(c2==0)
  58   1        {
  59   2          while(c2==0);
  60   2          lcd_char('5');
  61   2          key='5';
  62   2        }
  63   1        else if(c3==0)
  64   1        {
  65   2          while(c3==0);
  66   2          lcd_char('6');
  67   2          key='6';
  68   2        }
  69   1        else if(c4==0)
  70   1        {
  71   2          while(c4==0);
  72   2          lcd_char('*');
  73   2          key='*';
  74   2        }
  75   1        
  76   1        r1=1;r2=1;r3=0;r4=1;
  77   1        if(c1==0)
  78   1        {
  79   2          while(c1==0);
  80   2          lcd_char('1');
  81   2          key='1';
  82   2        }
  83   1        else if(c2==0)
  84   1        {
  85   2          while(c2==0);
  86   2          lcd_char('2');
  87   2          key='2';
  88   2        }
  89   1        else if(c3==0)
  90   1        {
  91   2          while(c3==0);
  92   2          lcd_char('3');
  93   2          key='3';
  94   2        }
  95   1        else if(c4==0)
  96   1        {
  97   2          while(c4==0);
  98   2          lcd_char('-');
  99   2          key='-';
 100   2        }
 101   1        
 102   1        
 103   1        r1=1;r2=1;r3=1;r4=0;
 104   1        if(c1==0)
 105   1        {
 106   2          while(c1==0);
 107   2            lcd_command(0x01);    //lcd clear
 108   2        }
 109   1        else if(c2==0)
 110   1        {
 111   2          while(c2==0);
 112   2          lcd_char('0');
 113   2          key='0';
 114   2        }
 115   1        else if(c3==0)
 116   1        {
C51 COMPILER V9.60.7.0   KEYPAD                                                            09/25/2024 12:06:34 PAGE 3   

 117   2          while(c3==0);
 118   2          lcd_char('=');
 119   2          key='=';
 120   2        }
 121   1        else if(c4==0)
 122   1        {
 123   2          while(c4==0);
 124   2          lcd_char('+');
 125   2          key='+';
 126   2        }
 127   1        
 128   1        return key;
 129   1      }
 130          
 131          
 132          //void main ()
 133          //{
 134          //  
 135          //   lcd_init();
 136          
 137          //  while(1)
 138          //  {
 139          ////    lcd_command(0x80);
 140          ////    lcd_string("ENTER THE KEY");
 141          ////  lcd_set_cursor(1, 0);
 142          //  keypad();
 143          //  
 144          
 145          //  }
 146          //}
 147          
 148          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    336    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
